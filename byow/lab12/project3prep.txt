Q: Can you think of an analogy between the process of tesselating hexagons and randomly generating a world using rooms and hallways? 
What is the hexagon and what is the tesselation on the Project 3 side?

A:
Both create a specific pattern of tiles.
-----
Q: If you were to start working on world generation, what kind of method would you think of writing first? 
Think back to the lab and the process used to eventually get to tesselating hexagons.

A:
We could have a method, which encloses open spaces with randomly generated shapes of certain tiles. Each
shape touching the other shapes will have different types of tiles. If the shape is a room or hallway, we'll
generate walls surrounding it.
-----
Q: What distinguishes a hallway from a room? How are they similar?

A:
A hallway is a narrow corridor, whereas a room is much more open. They're both spaces that the character can move through.
-----
Q: For tesselating hexagons, one of the hardest parts is figuring out where to place each hexagon/how to easily place hexagons on screen in an algorithmic way. 
After looking at your own implemention, consider the implementation provided near the end of the lab. 
How did your implementation differ from the given one? What lessons can be learned from it?

A:
In terms of making each hexagons, we have less helper methods than the TA's implementation. We generate the hexagons recursively, whereas
the other solution uses iteration.
-----
Q: Consider an algorithm for placing rooms and hallways on your map. 
Ideally, consider many algorithms and think about what makes some easier or harder to implement. Try and bring those ideas together into a single simple algorithm which accomplishes the task. 
In general, algorithms with as few edge cases as possible are better algorithms.

A:
We generate rectangles at random locations on the board, which will be our rooms. We will then connect each room with width 1 hallways.
Then we'll line all the rooms and hallways with walls.